#############################################################################
# Makefile for building: QGeneticNoThread
# Generated by qmake (2.01a) (Qt 4.8.7) on: mar. juil. 30 17:44:36 2019
# Project:  QGeneticNoThread.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile QGeneticNoThread.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/X11R6/lib64 -lglut -lGLU -L ~/lib -lgenetic -lneuralNet -lQtOpenGL -lQtGui -lQtCore -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		QTank.cpp \
		WinGL.cpp \
		../genetic/PoolFunc/Tank.cpp \
		../genetic/PoolFunc/TankPeople.cpp moc_WinGL.cpp
OBJECTS       = main.o \
		QTank.o \
		WinGL.o \
		Tank.o \
		TankPeople.o \
		moc_WinGL.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		QGeneticNoThread.pro
QMAKE_TARGET  = QGeneticNoThread
DESTDIR       = 
TARGET        = QGeneticNoThread

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: QGeneticNoThread.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile QGeneticNoThread.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/opengl.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtOpenGL.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile QGeneticNoThread.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/QGeneticNoThread1.0.0 || $(MKDIR) .tmp/QGeneticNoThread1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QGeneticNoThread1.0.0/ && $(COPY_FILE) --parents QTank.h WinGL.h ../genetic/PoolFunc/Tank.h ../genetic/PoolFunc/TankPeople.h .tmp/QGeneticNoThread1.0.0/ && $(COPY_FILE) --parents main.cpp QTank.cpp WinGL.cpp ../genetic/PoolFunc/Tank.cpp ../genetic/PoolFunc/TankPeople.cpp .tmp/QGeneticNoThread1.0.0/ && (cd `dirname .tmp/QGeneticNoThread1.0.0` && $(TAR) QGeneticNoThread1.0.0.tar QGeneticNoThread1.0.0 && $(COMPRESS) QGeneticNoThread1.0.0.tar) && $(MOVE) `dirname .tmp/QGeneticNoThread1.0.0`/QGeneticNoThread1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/QGeneticNoThread1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_WinGL.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_WinGL.cpp
moc_WinGL.cpp: WinGL.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) WinGL.h -o moc_WinGL.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp QTank.h \
		WinGL.h \
		../genetic/PoolFunc/Tank.h \
		../genetic/GeneticPool.h \
		../genetic/PeoplePool.h \
		../genetic/AbsPeople.h \
		../genetic/Fitness.h \
		../genetic/random.h \
		../genetic/AbsGenetic.h \
		../genetic/SortInvert.h \
		../genetic/Sort.h \
		../genetic/PoolFunc/TankPeople.h \
		../neuralNet/NeuralNet.h \
		../neuralNet/Layer.h \
		../neuralNet/Abs_layer.h \
		../neuralNet/Sigmoide.h \
		../neuralNet/ActivFunc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

QTank.o: QTank.cpp QTank.h \
		WinGL.h \
		../genetic/PoolFunc/Tank.h \
		../genetic/GeneticPool.h \
		../genetic/PeoplePool.h \
		../genetic/AbsPeople.h \
		../genetic/Fitness.h \
		../genetic/random.h \
		../genetic/AbsGenetic.h \
		../genetic/SortInvert.h \
		../genetic/Sort.h \
		../genetic/PoolFunc/TankPeople.h \
		../neuralNet/NeuralNet.h \
		../neuralNet/Layer.h \
		../neuralNet/Abs_layer.h \
		../neuralNet/Sigmoide.h \
		../neuralNet/ActivFunc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o QTank.o QTank.cpp

WinGL.o: WinGL.cpp WinGL.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WinGL.o WinGL.cpp

Tank.o: ../genetic/PoolFunc/Tank.cpp ../genetic/PoolFunc/Tank.h \
		../genetic/GeneticPool.h \
		../genetic/PeoplePool.h \
		../genetic/AbsPeople.h \
		../genetic/Fitness.h \
		../genetic/random.h \
		../genetic/AbsGenetic.h \
		../genetic/SortInvert.h \
		../genetic/Sort.h \
		../genetic/PoolFunc/TankPeople.h \
		../neuralNet/NeuralNet.h \
		../neuralNet/Layer.h \
		../neuralNet/Abs_layer.h \
		../neuralNet/Sigmoide.h \
		../neuralNet/ActivFunc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Tank.o ../genetic/PoolFunc/Tank.cpp

TankPeople.o: ../genetic/PoolFunc/TankPeople.cpp ../genetic/PoolFunc/TankPeople.h \
		../genetic/PeoplePool.h \
		../genetic/AbsPeople.h \
		../genetic/Fitness.h \
		../genetic/random.h \
		../neuralNet/NeuralNet.h \
		../neuralNet/Layer.h \
		../neuralNet/Abs_layer.h \
		../neuralNet/Sigmoide.h \
		../neuralNet/ActivFunc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TankPeople.o ../genetic/PoolFunc/TankPeople.cpp

moc_WinGL.o: moc_WinGL.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_WinGL.o moc_WinGL.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

